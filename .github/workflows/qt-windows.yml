name: Windows
on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  release:
      types: [published]
jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        qt:
          - version: 6.5.3
            modules: qtwebengine qtwebchannel qtpositioning
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }  # Experimental!
          - { sys: clang64, env: clang-x86_64 } # Experimental!
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: >-
            git
            make
          pacboy: >-
            toolchain:p
            cmake:p
            ninja:p

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt.version }}
          modules: ${{ matrix.qt.modules }}
          # arch: ${{ matrix.qt_arch }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1


      - name: where is cmake, make, ninja
        run: |
          which cmake
          which make
          which ninja
          env

      - name: Set up Qt environment
        run: |
          QtVersion="${{ matrix.qt.version }}"
          QtBaseDir="${{ github.workspace }}/../Qt/${QtVersion}"
          ls -al "${QtBaseDir}"
          QtArch=$(ls "${QtBaseDir}" | grep 'msvc*' | head -n 1)
          QtInstallDir="${{ github.workspace }}/../../Qt/${QtVersion}/${QtArch}/lib/cmake"
          ls -al ${QtInstallDir}
          export TEMP_QT_ARCH=${QtArch}

      - name: Build Windows
        env:
          QT_VERSION: ${{ matrix.qt.version }}
          CMAKE_PREFIX_PATH: ${{ github.workspace }}/../Qt/${{ matrix.qt.version }}/${{ env.TEMP_QT_ARCH }}/lib/cmake
          CMAKE_BUILD_TYPE: Release
        run: |
          # Get-ChildItem -Path "${{ github.workspace }}\.."
          # Get-ChildItem -Path "$QtBaseDir"
          # Get-ChildItem -Path "$QtInstallDir"
          # Get-ChildItem
          mkdir build
          cd build
          cmake -G Ninja ..
          ls -al
          cmake --build .
          ls -al
          make
          cd ..
          ls -al build

      - name: Package Application
        run: |
          cd build
          os=$(echo "${{ matrix.os }}" | sed 's/-latest//')
          repository_name=$(basename ${{ github.repository }})
          zipfile=${repository_name}-${os}-${{ matrix.arch }}-${{ github.run_number }}.zip
          zip -r ${zipfile} ${repository_name}.exe
          mv ${zipfile} ..
          cd ..
          ls -al
          echo "${zipfile}" > assets.txt

      - name: Create a Release
        if: ${{ github.event_name == 'release' }}
        id: create_release
        uses: shogo82148/actions-create-release@v1

      - name: Upload Assets
        if: ${{ github.event_name == 'release' }}
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GH_RELEASE_ACTION_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: assets.txt
